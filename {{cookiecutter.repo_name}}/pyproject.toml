[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
{{cookiecutter.package_import_name}} = ["*.json"]

[project]
name = "{{cookiecutter.repo_name}}"
authors = [{ name = "Minh Má»‘c Meo", email = "minh@xuvi.vn" }]
description = "My package description"
readme = "README.md"
requires-python = ">=3.7"
keywords = ["one", "two"]
license = { text = "MIT" }
classifiers = ["Programming Language :: Python :: 3"]
dependencies = ["numpy", 'importlib-metadata; python_version<"3.8"']
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
release = ["build", "twine"]
static-code-qa = ["pre-commit"]
dev = ["{{cookiecutter.repo_name}}[test,release,static-code-qa]"]

# docs: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = { file = "version.txt" }

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.black]
line-length = 119
extend-exclude = '''
(
  .venv/
  | .venv
)
'''

[tool.flake8]
docstring-convention = "all"
ignore = ["D203", "D212"]
exclude = [".venv"]
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = ["too-few-public-methods"]
max-line-length = 119


[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
# Select a subset of rules to enable:
#   E: PEP 8 errors and warnings
#   F: Fatal errors (e.g. parsing/AST errors)
#   B: Bugbear rules (e.g. trying to modify an iterable while iterating)
#   ERA: `ruff` rules (e.g. `ERA001`, `ERA002`, etc.)
lint.select = ["E", "F", "B", "ERA"]

# Never enforce `E501` (line length violations).
lint.ignore = ["E501", "F401"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
lint.unfixable = ["B"]
line-length = 119

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
